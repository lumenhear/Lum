'use strict';

document.addEventListener('DOMContentLoaded', () => {

    // 0. Register GSAP Plugins
    gsap.registerPlugin(ScrollTrigger);

    // 1. Mobile Navigation Toggle
    const hamburger = document.querySelector('.hamburger');
    const navMenu = document.querySelector('.nav-menu');
    const navLinks = document.querySelectorAll('.nav-menu a');
    
    hamburger.addEventListener('click', () => {
        navMenu.classList.toggle('active');
        hamburger.classList.toggle('active');
    });
    
    navLinks.forEach(link => {
        link.addEventListener('click', () => {
            navMenu.classList.remove('active');
            hamburger.classList.remove('active');
        });
    });

    // 2. Sticky Header on Scroll
    const header = document.querySelector('.header');
    ScrollTrigger.create({
        start: 'top top',
        end: 99999,
        onUpdate: (self) => {
            if (self.direction === 1 && self.progress > 0) {
                header.classList.add('scrolled');
            } else if (self.direction === -1 && self.progress < 0.01) {
                header.classList.remove('scrolled');
            }
        }
    });

    // 3. GSAP Animations
    // 3.1 Hero Section Animation
    const heroTimeline = gsap.timeline({ defaults: { ease: 'power3.out' } });
    heroTimeline
        .to('.gsap-hero-title', { opacity: 1, y: 0, duration: 1 })
        .to('.gsap-hero-subtitle', { opacity: 1, y: 0, duration: 0.8 }, '-=0.6')
        .to('.gsap-hero-button', { opacity: 1, y: 0, duration: 0.6 }, '-=0.5');

    // 3.2 General Fade-Up Animation for Sections/Headings
    gsap.utils.toArray('.gsap-fade-up').forEach(elem => {
        gsap.fromTo(elem, 
            { opacity: 0, y: 50 },
            {
                opacity: 1, y: 0, duration: 1, ease: 'power3.out',
                scrollTrigger: {
                    trigger: elem,
                    start: 'top 85%',
                    toggleActions: 'play none none none'
                }
            }
        );
    });

    // 3.3 Staggered Grid/Children Animation
    gsap.utils.toArray('.gsap-stagger-children').forEach(container => {
        const children = container.children;
        gsap.fromTo(children, 
            { opacity: 0, y: 50 },
            {
                opacity: 1, y: 0, duration: 0.8, ease: 'power3.out', stagger: 0.2,
                scrollTrigger: {
                    trigger: container,
                    start: 'top 80%',
                    toggleActions: 'play none none none'
                }
            }
        );
    });

    // 3.4 Number Counter Animation for Stats
    const statNumbers = gsap.utils.toArray('.stat-number');
    statNumbers.forEach(numberElem => {
        const target = +numberElem.dataset.target;
        gsap.from(numberElem, {
            textContent: 0,
            duration: 2,
            ease: 'power1.inOut',
            snap: { textContent: 1 },
            scrollTrigger: {
                trigger: numberElem,
                start: 'top 90%',
                toggleActions: 'play none none none'
            }
        });
    });

    // 4. Enhanced FAQ Accordion with GSAP
    const faqItems = document.querySelectorAll('.faq-item');
    let openFaqAnswer = null;

    faqItems.forEach(item => {
        const question = item.querySelector('.faq-question');
        const answer = item.querySelector('.faq-answer');
        gsap.set(answer, { height: 0 }); // Set initial state with GSAP

        question.addEventListener('click', () => {
            if (openFaqAnswer && openFaqAnswer !== answer) {
                // Close previously opened FAQ
                gsap.to(openFaqAnswer, {
                    height: 0,
                    duration: 0.4,
                    ease: 'power2.inOut'
                });
                openFaqAnswer.closest('.faq-item').classList.remove('active');
            }

            // Toggle current FAQ
            item.classList.toggle('active');
            if (item.classList.contains('active')) {
                openFaqAnswer = answer;
                gsap.to(answer, {
                    height: 'auto',
                    duration: 0.4,
                    ease: 'power2.inOut'
                });
            } else {
                openFaqAnswer = null;
                gsap.to(answer, {
                    height: 0,
                    duration: 0.4,
                    ease: 'power2.inOut'
                });
            }
        });
    });

    // 5. Contact Form submission (prevents default reload)
    const contactForm = document.querySelector('.contact-form');
    contactForm.addEventListener('submit', (e) => {
        e.preventDefault();
        alert('Thank you for your message! We will get back to you shortly.');
        contactForm.reset();
    });
});
    
